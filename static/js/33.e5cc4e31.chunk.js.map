{"version":3,"file":"static/js/33.e5cc4e31.chunk.js","mappings":"6LAEaA,EAAS,WACpB,OACE,+BACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,aACNC,UAAU,qBACVC,aAAc,CACZC,QAAS,OACTC,eAAgB,UAElBC,SAAS,KAIhB,C,yLChBKC,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,SAAU,QACVC,OAAQ,CACNC,QAAS,sCAIN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBN,EAASO,IAAT,uBADlB,cACCC,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBZ,EAASO,IAAT,gBAA8B,CACnDH,OAAQ,CACNQ,MAAAA,KAHC,cACCJ,EADD,yBAMEA,EAASC,KAAKC,SANhB,kEASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACkBd,EAASO,IAAT,iBAAuBO,IADzC,cACCN,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAASM,EAAgBD,GAE9B,OADiBd,EAASO,IAAT,iBAAuBO,EAAvB,YAElB,CAEM,SAASE,EAAgBF,GAE9B,OADiBd,EAASO,IAAT,iBAAuBO,EAAvB,YAElB,C,gKCpCYG,E,MAAaC,GAAAA,EAAH,4J,mBCFhB,SAASC,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QAC5B,OACE,wBACGA,EAAQC,OAAS,GAChBD,EAAQE,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,0BAAI,WAASD,MACb,uBAAIC,MAFGV,EADC,KAQnB,CC0BD,MA9BA,WACE,IAAQW,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOP,EAAP,KAAgBQ,EAAhB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEMhB,EAAAA,EAAAA,IAAgBS,GAFtB,OAEXjB,EAFW,OAGjBoB,EAAWpB,EAASC,KAAKC,SACzBoB,GAAa,GAJI,gDAMjBG,EAAAA,GAAAA,MAAY,+BANK,yDAAH,qDASlBD,IACAF,GAAa,EACd,GAAE,CAACL,KAGF,gCACGI,IAAa,SAACvC,EAAA,EAAD,KACd,SAAC6B,EAAD,CAAaC,QAASA,IACF,IAAnBA,EAAQC,SACP,SAACJ,EAAD,UAAY,kDAInB,C","sources":["components/Loader/Loader.jsx","components/Service/ApiKey.jsx","pages/MovieDetails/Reviews.styled.js","components/ReviewList/ReviewsList.jsx","pages/MovieDetails/Reviews.jsx"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <ThreeDots\n        height=\"100\"\n        width=\"100\"\n        radius=\"9\"\n        color=\"blueviolet\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n        visible={true}\n      />\n    </>\n  );\n};\n","import axios from 'axios';\n\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  language: 'en-US',\n  params: {\n    api_key: '633b5eddef52d7ba7f4c5dab163fa70d',\n  },\n});\n\nexport async function getPopularMovies() {\n  const response = await instance.get(`/trending/movie/day`);\n  return response.data.results;\n}\n\nexport async function getMoviesByName(query) {\n  const response = await instance.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function getMoviesById(id) {\n  const response = await instance.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport function getMovieCredits(id) {\n  const response = instance.get(`/movie/${id}/credits`);\n  return response;\n}\n\nexport function getMovieReviews(id) {\n  const response = instance.get(`/movie/${id}/reviews`);\n  return response;\n}","import styled from 'styled-components';\n\nexport const ReviewPlug = styled.p`\n  display: flex;\n  justify-content: center;\n  font-size: 24px;\n  font-weight: 600;\n  margin-right: auto;\n  margin-left: auto;\n`;\n","export function ReviewsList({ reviews }) {\n  return (\n    <ul>\n      {reviews.length > 0 &&\n        reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <h3>Author: {author}</h3>\n            <p>{content}</p>\n          </li>\n        ))}\n    </ul>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../components/Service/ApiKey';\nimport { toast } from 'react-toastify';\nimport { ReviewPlug } from './Reviews.styled';\nimport { Loader } from '../../components/Loader/index';\nimport { ReviewsList } from '../../components/ReviewList';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const movieReviews = async () => {\n      try {\n        const response = await getMovieReviews(movieId);\n        setReviews(response.data.results);\n        setIsLoading(false);\n      } catch (error) {\n        toast.error('Oops! Something went wrong!');\n      }\n    };\n    movieReviews();\n    setIsLoading(true);\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <ReviewsList reviews={reviews}></ReviewsList>\n      {reviews.length === 0 && (\n        <ReviewPlug> We don't have any reviews for this movie. </ReviewPlug>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","visible","instance","axios","baseURL","language","params","api_key","getPopularMovies","get","response","data","results","getMoviesByName","query","getMoviesById","id","getMovieCredits","getMovieReviews","ReviewPlug","styled","ReviewsList","reviews","length","map","author","content","movieId","useParams","useState","setReviews","isLoading","setIsLoading","useEffect","movieReviews","toast"],"sourceRoot":""}