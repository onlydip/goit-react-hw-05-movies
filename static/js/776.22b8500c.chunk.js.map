{"version":3,"file":"static/js/776.22b8500c.chunk.js","mappings":"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","sources":["components/GoBack/GoBackLink.js","components/Service/ApiKey.jsx","components/MovieInfo/MovieInfoDetail.styled.js","components/MovieInfo/MovieInfoDetail.jsx","components/MovieAction/MovieActions.styled.js","components/MovieAction/MovieActions.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled'\nimport { Link } from 'react-router-dom';\n\nexport const GoBackLink = styled(Link)`\n  display: block;\n  width: auto;\n  margin: 20px;\n  font-size: 14px;\n  font-weight: 700;\n  text-decoration: none;\n  &:hover,\n  :focus,\n  :active {\n    color: blueviolet;\n  }\n`;\n","import axios from 'axios';\n\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  language: 'en-US',\n  params: {\n    api_key: '633b5eddef52d7ba7f4c5dab163fa70d',\n  },\n});\n\nexport async function getPopularMovies() {\n  const response = await instance.get(`/trending/movie/day`);\n  return response.data.results;\n}\n\nexport async function getMoviesByName(query) {\n  const response = await instance.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function getMoviesById(id) {\n  const response = await instance.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport function getMovieCredits(id) {\n  const response = instance.get(`/movie/${id}/credits`);\n  return response;\n}\n\nexport function getMovieReviews(id) {\n  const response = instance.get(`/movie/${id}/reviews`);\n  return response;\n}","import styled from '@emotion/styled'\n\n const MainInfo = styled.div`\n  display: flex;\n`;\n\n const InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n`;\n\n const Poster = styled.img`\n  width: 250px;\n  height: auto;\n`;\n\n const PosterPlug = styled.img`\n  width: 250px;\n  height: auto;\n`;\n\n const UserScoreText = styled.p`\n  font-size: 18px;\n  font-weight: 600;\n`;\n\n const Title = styled.h3`\n  font-size: 26px;\n  font-weight: 700;\n`;\n\n const TitleYear = styled.span`\n  font-size: 26px;\n  font-weight: 700;\n  margin-left: 5px;\n`;\n\n\nexport {MainInfo,InfoWrapper,Poster, PosterPlug,UserScoreText,Title,TitleYear}; ","import {\n  MainInfo,\n  InfoWrapper,\n  Poster,\n  PosterPlug,\n  UserScoreText,\n  Title,\n  TitleYear,\n} from './MovieInfoDetail.styled';\nimport poster_plug from '../../images/poster_plug.jpg';\n\nexport function MovieInfoDetail({ movie }) {\n  const releaseDate = new Date(movie.release_date).getFullYear();\n\n  return (\n    <MainInfo>\n      {movie.poster_path ? (\n        <Poster\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.title}\n        ></Poster>\n      ) : (\n        <PosterPlug src={poster_plug} alt=\"Poster Plug\"></PosterPlug>\n      )}\n      <InfoWrapper>\n        <Title>\n          {movie.title}\n          <TitleYear>({releaseDate})</TitleYear>\n        </Title>\n        <UserScoreText>\n          User Score: {`${Number(movie.vote_average).toFixed(1) * 10}%`}\n        </UserScoreText>\n        <h3>Overview</h3>\n        <p>{movie.overview}</p>\n        <h3>Genres</h3>\n        <p>\n          {movie.genres\n            ? movie.genres.map(genre => genre.name).join(', ')\n            : 'There are no genres!'}\n        </p>\n      </InfoWrapper>\n    </MainInfo>\n  );\n}\n","import styled from '@emotion/styled'\nimport { Link } from 'react-router-dom';\n\n const AddInfoWrapper = styled.div`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  border-bottom: 1px solid black;\n  border-top: 1px solid black;\n`;\n\n const AddInfoList = styled.ul`\n  margin-bottom: 20px;\n`;\n\n const AddInfoItem = styled.li`\n  text-decoration: none;\n  margin-bottom: 5px;\n`;\n\n const AddInfoLink = styled(Link)`\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 18px;\n  color: #551a8b;\n  &:hover {\n    color: blueviolet;\n  }\n`;\nexport {AddInfoWrapper,AddInfoList,AddInfoItem, AddInfoLink};","import {\n  AddInfoWrapper,\n  AddInfoList,\n  AddInfoItem,\n  AddInfoLink,\n} from './MovieActions.styled';\n\nexport function MovieActions({ location }) {\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  return (\n    <AddInfoWrapper>\n      <h3>Additional information</h3>\n      <AddInfoList>\n        <AddInfoItem>\n          <AddInfoLink to={'credits'} state={{ from: backLinkHref }}>\n            {'>'} Cast\n          </AddInfoLink>\n        </AddInfoItem>\n        <AddInfoItem>\n          <AddInfoLink to=\"reviews\" state={{ from: backLinkHref }}>\n            {'>'} Reviews\n          </AddInfoLink>\n        </AddInfoItem>\n      </AddInfoList>\n    </AddInfoWrapper>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { getMoviesById } from '../../components/Service/ApiKey';\nimport { GoBackLink } from '../../components/GoBack/index';\nimport { useNavigate } from 'react-router-dom';\nimport { MovieInfoDetail } from '../../components/MovieInfo/index';\nimport { MovieActions } from '../../components/MovieAction/index';\n\nexport default function MovieDetails() {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const movieInfo = async () => {\n      try {\n        const response = await getMoviesById(movieId);\n        setMovie(response);\n      } catch (error) {\n        if (error) {\n          if (error) {\n            navigate('/*', { replace: true });\n          }\n        }\n      }\n    };\n    movieInfo();\n  }, [movieId, navigate]);\n\n  return (\n    <main>\n      <GoBackLink to={backLinkHref}>{'<'} Go back</GoBackLink>\n      <MovieInfoDetail movie={movie}></MovieInfoDetail>\n      <MovieActions location={location}></MovieActions>\n      <Outlet />\n    </main>\n  );\n}\n\n"],"names":["GoBackLink","styled","Link","instance","axios","baseURL","language","params","api_key","getPopularMovies","get","response","data","results","getMoviesByName","query","getMoviesById","id","getMovieCredits","getMovieReviews","MainInfo","InfoWrapper","Poster","PosterPlug","UserScoreText","Title","TitleYear","MovieInfoDetail","movie","releaseDate","Date","release_date","getFullYear","poster_path","src","alt","title","poster_plug","Number","vote_average","toFixed","overview","genres","map","genre","name","join","AddInfoWrapper","AddInfoList","AddInfoItem","AddInfoLink","MovieActions","backLinkHref","location","state","from","to","MovieDetails","useLocation","movieId","useParams","useState","setMovie","navigate","useNavigate","useEffect","movieInfo","replace"],"sourceRoot":""}